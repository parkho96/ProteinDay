<!DOCTYPE html>
<html layout:decorate="~{layouts/layout1}"
      xmlns="http://www.w3.org/1999/html" xmlns:layout="http://www.ultraq.net.nz/thymeleaf/layout"
      xmlns:th="http://www.thymeleaf.org">
<head>
    <meta name="_csrf" th:content="${_csrf.token}"/>
    <meta name="_csrf_header" th:content="${_csrf.headerName}"/>
</head>

<th:block layout:fragment="script">
    <script th:inline="javascript">

        $(document).ready(function()
        {
            calculateTotalPrice();
            calculatePreTotalPrice();
            $("#count").change(function() {
                calculatePreTotalPrice();
                calculateTotalPrice();
            });
        });

        function calculatePreTotalPrice(){
            var count = $("#count").val();
            var price = $("#price").val();
            var totalPrice = price*count;

            $("#totalPrePrice").html(totalPrice+'원');
        }

        function calculateTotalPrice(){
            var count = $("#count").val();
            var price = $("#price").val();
            var totalPrice = price*count;
            // 회원 등급에 따른 할인 로직
            var grade = $("#grade").val();

            if (grade === "SILVER") {
                totalPrice = Math.floor(totalPrice * 0.9); // 10% 할인
            } else if (grade === "GOLD") {
                totalPrice = Math.floor(totalPrice * 0.8); // 20% 할인
            }

            $("#totalPrice").html(totalPrice+'원');
            return totalPrice;
        }

        function addCart()
        {
            var token = $("meta[name='_csrf']").attr("content");
            var header = $("meta[name='_csrf_header']").attr("content");


            var url="/shop/cart";
            var paramData = {
                itemId : $("#itemId").val(),
                count : $("#count").val()
            };
            var param = JSON.stringify(paramData);
            $.ajax({
               url : url,
               type: "POST",
               contentType: "application/json",
               data : param,
               beforeSend : function (xhr){
                   xhr.setRequestHeader(header, token);
               },
                dataType: "json",
                cache : false,
                success : function (result, status){
                   alert("상품을 장바구니에 담았습니다.");
                   location.href = '/shop/cart/';
                },
                error : function (jqXHR,status, error){
                   if(jqXHR.status =='401'){
                       alert("로그인 후 이용해주세요.");
                       location.href = '/members/login';
                   }else{
                       alert(jqXHR.responseText);
                   }
                }
            });
        }
        var errorMessage =  null;
        if (errorMessage) {
            alert(errorMessage);
            history.back(); // 뒤로 돌아가기
        }

        //문의 등록 코드
        function confirmInquiry() {
            if (confirm("문의글을 작성하시겠습니까?")) {
                // 사용자가 "확인"를 클릭한 경우에만 폼을 제출합니다.
                document.getElementById("inquiry").submit();
            } else {
                event.preventDefault();
            }
        }
        //문의 삭제 코드
        function deleteInquiry(inquiryId) {
            var token = $("meta[name='_csrf']").attr("content");
            var confirmation = confirm("문의를 삭제하시겠습니까?"); // 삭제를 확인하는 메시지

            if (confirmation) { // 예 버튼을 클릭한 경우
                $.ajax({
                    type: "POST",
                    url: "/item/inquiry/delete/" + inquiryId,
                    headers: {
                       "X-CSRF-Token": token
                    },
                    success: function(response) {
                        console.log("문의가 성공적으로 삭제되었습니다.");
                        location.reload();
                    },
                    error: function(xhr, status, error) {
                        console.error("문의 삭제 중 오류가 발생했습니다.");
                    }
                });
            }
        }
        //문의 수정 코드
        function updateInquiry(inquiryId) {
            var token = $("meta[name='_csrf']").attr("content");
            var updatedContent = document.querySelector('.content-input-' + inquiryId).value;
            var confirmation = confirm("문의를 수정하시겠습니까?");

            if (confirmation) {
                $.ajax({
                    type: "POST",
                    url: "/item/inquiry/update/" + inquiryId,
                    data: {
                    id: inquiryId,
                    content: updatedContent
                    },
                    headers: {
                       "X-CSRF-Token": token
                    },
                    success: function(response) {
                        console.log("문의가 성공적으로 수정되었습니다.");
                        location.reload();
                    },
                    error: function(xhr, status, error) {
                        // 오류 응답일 경우 알림창 표시
                        alert(xhr.responseText);
                    }
                });
            }
        }


        //리뷰 수정 코드
        function updateReview(reviewId) {
            var token = $("meta[name='_csrf']").attr("content");
            var updatedContentReview = $("#contentReview").val();
            var updatedStar = 0;

            // 체크된 요소가 있는 경우 해당 값을 가져옴
            var checkedStar = document.querySelector('.reviewStarGen:checked');
            if (checkedStar) {
                updatedStar = checkedStar.value;
            }

            var confirmation = confirm("리뷰를 수정하시겠습니까?");

            if (confirmation) {
                $.ajax({
                    type: "POST",
                    url: "/item/review/update/" + reviewId,
                    data: {
                        id: reviewId,
                        revContent: updatedContentReview,
                        reviewStar: updatedStar
                    },
                    headers: {
                       "X-CSRF-Token": token
                    },
                    success: function(response) {
                        console.log("리뷰가 성공적으로 수정되었습니다.");
                        location.reload();
                    },
                    error: function(xhr, status, error) {

                        alert(xhr.responseText);
                    }
                });
            }
        }

            //리뷰 삭제 코드
        function deleteReview(reviewId) {
            var token = $("meta[name='_csrf']").attr("content");
            var confirmation = confirm("문의를 삭제하시겠습니까?"); // 삭제를 확인하는 메시지

            if (confirmation) { // 예 버튼을 클릭한 경우
                $.ajax({
                    type: "POST",
                    url: "/item/review/delete/" + reviewId,
                    headers: {
                       "X-CSRF-Token": token
                    },
                    success: function(response) {
                        console.log("리뷰가 성공적으로 삭제되었습니다.");
                        location.reload();
                    },
                    error: function(xhr, status, error) {
                        console.error("리뷰 삭제 중 오류가 발생했습니다.");
                    }
                });
            }
        }


        function editMode(inquiryId) {
            var row = event.target.closest('tr');
            var contentSpan = row.querySelector('.content-span-' + inquiryId);
            var contentInput = row.querySelector('.content-input-' + inquiryId);
            var buttonEditMode = row.querySelector('.button-editMode-' + inquiryId);
            var buttonDelete = row.querySelector('.button-delete-' + inquiryId);
            var buttonUpdate = row.querySelector('.button-update-' + inquiryId);
            var buttonNoneEditMode = row.querySelector('.button-noneEditMode-' + inquiryId);

            contentSpan.style.display = 'none';
            contentInput.style.display = 'block';
            buttonEditMode.style.display = 'none';
            buttonDelete.style.display = 'none';
            buttonUpdate.style.display = 'block';
            buttonNoneEditMode.style.display = 'block';
        }

        function editModeCancel(inquiryId) {
            var row = event.target.closest('tr');
            var contentSpan = row.querySelector('.content-span-' + inquiryId);
            var contentInput = row.querySelector('.content-input-' + inquiryId);
            var buttonEditMode = row.querySelector('.button-editMode-' + inquiryId);
            var buttonDelete = row.querySelector('.button-delete-' + inquiryId);
            var buttonUpdate = row.querySelector('.button-update-' + inquiryId);
            var buttonNoneEditMode = row.querySelector('.button-noneEditMode-' + inquiryId);

            contentSpan.style.display = 'block';
            contentInput.style.display = 'none';
            buttonEditMode.style.display = 'block';
            buttonDelete.style.display = 'block';
            buttonUpdate.style.display = 'none';
            buttonNoneEditMode.style.display = 'none';
        }



        function editModeReview(reviewId) {
            var table = event.target.closest('table');
            var contentSpan = table.querySelector('.content-span-' + reviewId);
            var contentInput = table.querySelector('.content-input-' + reviewId);
            var starEditMode = table.querySelector('.star-editMode-' + reviewId);
            var starUpdate = table.querySelector('.star-update-' + reviewId);
            var buttonEditMode = table.querySelector('.button-editMode-' + reviewId);
            var buttonDelete = table.querySelector('.button-delete-' + reviewId);
            var buttonUpdate = table.querySelector('.button-update-' + reviewId);
            var buttonNoneEditMode = table.querySelector('.button-noneEditMode-' + reviewId);

            contentSpan.style.display = 'none';
            contentInput.style.display = 'block';
            starEditMode.style.display = 'none';
            starUpdate.style.display = 'block';
            buttonEditMode.style.display = 'none';
            buttonDelete.style.display = 'none';
            buttonUpdate.style.display = 'block';
            buttonNoneEditMode.style.display = 'block';
        }

        function editModeReviewCancel(reviewId) {
            var table = event.target.closest('table');
            var contentSpan = table.querySelector('.content-span-' + reviewId);
            var contentInput = table.querySelector('.content-input-' + reviewId);
            var starEditMode = table.querySelector('.star-editMode-' + reviewId);
            var starUpdate = table.querySelector('.star-update-' + reviewId);
            var buttonEditMode = table.querySelector('.button-editMode-' + reviewId);
            var buttonDelete = table.querySelector('.button-delete-' + reviewId);
            var buttonUpdate = table.querySelector('.button-update-' + reviewId);
            var buttonNoneEditMode = table.querySelector('.button-noneEditMode-' + reviewId);

            contentSpan.style.display = 'block';
            contentInput.style.display = 'none';
            buttonEditMode.style.display = 'block';
            starEditMode.style.display = 'block';
            starUpdate.style.display = 'none';
            buttonDelete.style.display = 'block';
            buttonUpdate.style.display = 'none';
            buttonNoneEditMode.style.display = 'none';
        }

        var fileArr;
        var fileInfoArr=[];

        // 썸네일 클릭시 삭제
        function fileRemove(index) {
            var thumbnailId = "thumbnail_" + index;
            var thumbnail = document.getElementById(thumbnailId);
            thumbnail.parentNode.removeChild(thumbnail);

        // fileInfoArr 배열에서 해당 파일을 검색하여 삭제
            var fileIndex = -1;
            for (var i = 0; i < fileInfoArr.length; i++) {
                if (fileInfoArr[i].thumbnailId === thumbnailId) {
                fileIndex = i;
                break;
                }
            }
            if (fileIndex !== -1) {
                fileInfoArr.splice(fileIndex, 1);
            }
            console.log(fileInfoArr); // 남아있는 파일 목록 출력
        }


        // 썸네일 미리보기
        function previewImage(targetObj, viewArea) {
            var files = targetObj.files;
            fileArr = Array.prototype.slice.call(files);
            var preview = document.getElementById(viewArea);

            for (var i = 0; i < files.length; i++) {
                var file = files[i];
                var thumbnailId = "thumbnail_" + i; // 썸네일 ID
                fileInfoArr.push({
                    file: file,
                    thumbnailId: thumbnailId // 썸네일 ID 정보 추가
            });

            var imageType = /image.*/;

            if (!file.type.match(imageType))
            continue;

            var thumbnail = document.createElement('div');
            thumbnail.id = thumbnailId;
            thumbnail.className = "thumbnail";
            preview.appendChild(thumbnail);

            var img = document.createElement("img");
            img.className = "addImg";
            img.classList.add("obj");
            img.file = file;
            img.src = URL.createObjectURL(file);
            thumbnail.appendChild(img);

            var deleteBtn = document.createElement("div");
            deleteBtn.className = "delete";
            deleteBtn.innerHTML = "X";
            deleteBtn.onclick = (function (index) {
              return function () {
                fileRemove(index);
              };
            })(i); // 현재 인덱스 값 전달
            thumbnail.appendChild(deleteBtn);

            if (window.FileReader) {
              var reader = new FileReader();
              reader.onloadend = (function (aImg) {
                return function (e) {
                  aImg.src = e.target.result;
                };
              })(img);
              reader.readAsDataURL(file);
                }
            }

    }

    //리뷰 작성 코드
  function sendData() {

        var token=$("meta[name='_csrf']").attr("content");
        var header=$("meta[name='_csrf_header']").attr("content");

        var itemId = $('#itemId').val();
        var questionReview = $('#questionReview').val();
        var reviewStar = document.querySelector('input[name="reviewStar"]:checked').value;
        var formData = new FormData();


      formData.append('itemId', itemId);
      formData.append('reviewContent', questionReview);
      formData.append('reviewStar', reviewStar);

        for (var i = 0; i < fileInfoArr.length; i++) {
            var file = fileInfoArr[i].file;
            formData.append('reviewImgFileList', file);
            console.log(file);
        }

      $.ajax({
        url: '/item/review/' + itemId,
        type: 'POST',
        data: formData,
        beforeSend : function(xhr){
                    /*데이터를 전송하기 전에 헤더에 csrf 값을 설정*/
                    xhr.setRequestHeader(header, token);
                },
        processData: false,
        contentType: false,
        success: function(response) {
          alert("리뷰글이 작성되었습니다");
          window.location.href = window.location.href;
        },
        error: function(xhr, status, error) {
          alert("리뷰글 작성 중 오류가 발생했습니다.");
          window.location.href = window.location.href;
        }
      });
    }

    </script>
</th:block>
<th:block layout:fragment="css">
    <style>

        .image-container {
            display: inline-block;
            margin: 5px;
            width: 100px;
            height: 100px;
        }

        .image-container img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }
        .mgb-15{
            margin-bottom:15px;
        }
        .mgt-30{
            margin-top:30px;
        }
        .mgt-50{
            margin-top:50px;
        }
        .repImgDiv{
            margin-right:15px;
            height:auto;
            width:50%;
        }
        .repImg{
            width:100%;
            height:400px;
        }
        .wd50{
            height:auto;
            width:50%;
        }
        .form-group {
        display: flex;
        flex-wrap: nowrap;
        }

        .form-group label {
            white-space: nowrap;
        }

        .form-group input, .form-group textarea {
            flex-grow: 1;
        }
        .inquiry {
        border: 1px solid gray;
        border-radius: 5px;
        }
        .button-wrapper {
            display: inline-block;
            width: 30%;
            position: relative;
            overflow: hidden;
        }
        .button-wrapper button {
            width: 100%;
            font-size: 14px;
            padding-top: 5px;
            padding-bottom: 5px;
            padding-left: 0;
            padding-right: 0;
            white-space: nowrap;
        }
        .review {
        border: 1px solid gray;
        border-radius: 5px;
        }

        #reviewSub fieldset,
        #reviewList fieldset {
          display: inline-block;
          direction: rtl;
          border: 0;
        }

        #reviewSub fieldset legend,
        #reviewList fieldset legend {
          text-align: right;
        }

        #reviewSub input[type=radio],
        #reviewList input[type=radio] {
          display: none;
        }

        #reviewSub fieldset label{
          font-size: 3em;
          color: transparent;
          text-shadow: 0 0 0 #f0f0f0;
        }

        #reviewList fieldset label {
          font-size: 1em;
          color: transparent;
          text-shadow: 0 0 0 #f0f0f0;
        }

        #reviewSub fieldset label:hover,
        #reviewList fieldset label:hover,
        #reviewSub fieldset label:hover ~ label,
        #reviewList fieldset label:hover ~ label {
          text-shadow: 0 0 0 rgba(250, 208, 0, 0.99);
        }

        #reviewSub fieldset input[type=radio]:checked ~ label,
        #reviewList fieldset input[type=radio]:checked ~ label {
          text-shadow: 0 0 0 rgba(250, 208, 0, 0.99);
        }
        .addImg {
        width: 100px;
        height: 100px;
        }
         .thumbnail {
      position: relative;
      display: inline-block;
      width: 100px;
      height: 100px;
      margin-right: 5px;
    }

    .thumbnail img {
      width: 100%;
      height: 100%;
    }

    .thumbnail .delete {
      position: absolute;
      bottom: 0;
      right: 0;
      width: 20px;
      height: 20px;
      background-color: rgba(0, 0, 0, 0.5);
      color: white;
      text-align: center;
      line-height: 20px;
      font-size: 14px;
      cursor: pointer;
    }

    </style>
</th:block>


<div layout:fragment="content" style="margin-left:25%;margin-right:25%">


    <input id="itemId" name="itemId" th:value="${item.id}" type="hidden">
    <input id="grade" th:value="${grade}" type="hidden">
    <div class="d-flex">
        <div class="repImgDiv">
            <img class="rounded repImg" th:alt="${item.itemNm}" th:src="${item.itemImgDtoList[0].imgUrl}">
        </div>
        <div class="wd50">
            <span class="badge badge-dark mgb-15"
                  th:if="${item.itemSellStatus == T(com.blue.bluearchive.constant.ItemSellStatus).SELL}">
                판매중
            </span>
            <span class="badge btn-danger mgb-15"
                  th:unless="${item.itemSellStatus == T(com.blue.bluearchive.constant.ItemSellStatus).SELL}">
                품절
            </span>
            <div class="h4" id="itemNm" th:text="${item.itemNm}"></div>
            <div class="h5">판매자 <span style="font-size: 25px" th:text="${item.sellerNickName}"/></div>
            <hr class="my-4">


            <div class="text-right">
                <div class="h4 text-left">
                    총 수량<p></p>
                    <span class="font-weight-bold" th:text="${item.stockNumber}"></span>개
                    <p></p>
                    <input id="price" name="price" th:value="${item.price}" type="hidden">
                    가격 <span th:text="${item.price}"></span>원
                </div>
                <div class="input-group w-50">
                    <div class="input-group-prepend">
                        <span class="input-group-text">수량</span>
                    </div>
                    <input class="form-control" id="count" min="1" name="count" type="number" value="1">
                </div>
            </div>
            <hr class="my-4">


            <div class="text-right mgt-50">
                <h5>결제 금액</h5>
                <span th:if="${#authorization.expression('hasAuthority(''GRADE_SILVER'')')}">10%</span>
                <span th:if="${#authorization.expression('hasAuthority(''GRADE_GOLD'')')}">20%</span>
                <s id="totalPrePrice" th:text="${item.price} + '원'"
                   th:unless="${#authorization.expression('hasAuthority(''GRADE_BRONZE'')')}"></s>

                <h3 class="font-weight-bold text-danger" id="totalPrice" name="totalPrice" th:text="${item.price}"></h3>
            </div>
            <div class="text-right"
                 th:if="${item.itemSellStatus == T(com.blue.bluearchive.constant.ItemSellStatus).SELL}">
                <button class="btn btn-light border border-dark btn-lg" onclick="addCart()" type="button">장바구니 담기
                </button>
                <!--                <button type="button" class="btn btn-dark btn-lg" onclick="order()">주문하기</button>-->
                <button class="btn btn-dark btn-lg" id="payment-button">결제하기</button>
            </div>
            <div class="text-right"
                 th:unless="${item.itemSellStatus == T(com.blue.bluearchive.constant.ItemSellStatus).SELL}">
                <button class="btn btn-danger btn-lg" type="button">품절</button>
            </div>
        </div>
    </div>


    <div class="jumbotron jumbotron-fluid mgt-30">
        <div class="container">
            <h4 class="display-5">상품 상세 설명</h4>
            <hr class="my-4">
            <p class="lead" th:text="${item.itemDetail}"></p>
        </div>
    </div>


    <div class="text-center" th:each="itemImg : ${item.itemImgDtoList}">
        <img class="rounded mgb-15" th:if="${not #strings.isEmpty(itemImg.imgUrl)}" th:src="${itemImg.imgUrl}"
             width="800">
    </div>

    <h5 class="bg-secondary text-white" style="text-align: center; border-radius: 5px; padding: 10px;">상품 문의</h5>
    <div class="inquiry">
        <form id="inquiry" method="post" th:action="@{/item/inquiry/{itemId}(itemId=${item.id})}">
            <input id="itemId2" th:value="${item.id}" type="hidden">
            <div class="form-group" style="margin: 10px;">
                <label for="name" style="width: 80px; text-align: center;">작성자</label>
                <input class="inquiry" id="name" name="name" readonly style="width: 20%; text-align: center;"
                       th:value="${#authentication.principal.nickName != null ? #authentication.principal.nickName : ''}"
                       type="text">
                <label for="email" style="width: 80px; text-align: center;">이메일</label>
                <input class="inquiry" id="email" name="createdBy" readonly style="width: 65%; padding-left:5px;"
                       th:value="${#authentication.principal.email != null ? #authentication.principal.email : ''}"
                       type="email">
            </div>
            <div class="form-group" style="margin: 10px;">
                <label for="question" style="width: 80px; text-align: center;">문의내용</label>
                <textarea class="inquiry" id="question" name="inquiryContent" style="width: 94%;"
                          th:placeholder="${#httpServletRequest.userPrincipal == null ? '로그인이 필요합니다' : ''}"
                          th:readonly="${#httpServletRequest.userPrincipal == null}"></textarea>
            </div>
            <div class="text-center" style="margin: 5px;" th:if="${#httpServletRequest.userPrincipal != null}">
                <button class="btn btn-dark" onclick="confirmInquiry()" type="submit">문의하기</button>
            </div>
        </form>
    </div>

    <div class="inquiry" style="text-align: center;">
        <table style="width:100%">
            <tr style="text-align: center; font-weight: bold;">
                <td style="width: 10%">작성자</td>
                <td style="width: 60%">문의 내용</td>
                <td style="width: 15%">작성 시간</td>
                <td style="width: 15%">수정 / 삭제</td>
            </tr>
        </table>
        <table style="width: 100%" th:each="inquiry : ${inquiryList}">
            <tr style="text-align: center; font-weight: bold;">
                <td style="width: 10%"></td>
                <td style="width: 60%"></td>
                <td style="width: 15%"></td>
                <td style="width: 15%"></td>
            </tr>
            <tr style="text-align: center;">
                <input id="inquiryId" th:value="${inquiry.id}" type="hidden">
                <td style="padding: 5px;" th:text="${inquiry.createdBy}"></td>
                <td>
                    <span th:class="'content-span-' + ${inquiry.id}" th:text="${inquiry.content}"></span>
                    <textarea style="width: 100%; display: none; overflow-y: hidden;"
                              th:class="'content-input-' + ${inquiry.id}"
                              th:text="${inquiry.content}"></textarea>
                </td>
                <td th:text="${#temporals.format(inquiry.regTime, 'yy-MM-dd hh:mm')}"></td>
                <td th:if="${#authentication.principal.nickName == inquiry.createdBy}">
                    <div class="button-wrapper">
                        <button th:attr="onclick='editMode(\'' + ${inquiry.id} + '\')'" th:class="'button-editMode-' + ${inquiry.id} + ' btn btn-dark'"
                                type="button">수정
                        </button>
                        <button style="display: none;" th:attr="onclick='updateInquiry(\'' + ${inquiry.id} + '\')'"
                                th:class="'button-update-' + ${inquiry.id} + ' btn btn-dark'"
                                type="button">수정
                        </button>
                    </div>
                    <div class="button-wrapper">
                        <button th:attr="onclick='deleteInquiry(\'' + ${inquiry.id} + '\')'" th:class="'button-delete-' + ${inquiry.id} + ' btn btn-dark'"
                                type="button">삭제
                        </button>
                        <button style="display: none;" th:attr="onclick='editModeCancel(\'' + ${inquiry.id} + '\')'"
                                th:class="'button-noneEditMode-' + ${inquiry.id} + ' btn btn-dark'"
                                type="button">취소
                        </button>
                    </div>
                </td>
            </tr>
            <tr style="background-color: #F5F5F5; text-align: center;" th:each="inquiryAnswer : ${inquiryAnswerList}"
                th:if="${inquiryAnswer.inquiry.getId()} == ${inquiry.id}">
                <td style="padding: 5px;">판매자</td> <!-- 작성자 정보가 들어갈 자리 -->
                <td>
                    <span class="content-span" th:text="${inquiryAnswer.content}"></span>
                </td>
                <td th:text="${#temporals.format(inquiryAnswer.regTime, 'yy-MM-dd hh:mm')}"></td>
                <!-- 작성 시간 정보가 들어갈 자리 -->
                <td></td> <!-- 수정 / 삭제 버튼이 들어갈 자리 -->
            </tr>
        </table>
    </div>

    <h5 class="bg-secondary text-white" style="text-align: center; border-radius: 5px; padding: 10px; margin-top: 10px;">상품 리뷰</h5>
    <div class="review" id="reviewSub">
            <input id="itemIdReview" th:value="${item.id}" type="hidden">

            <fieldset>
                <input id="rate1" name="reviewStar" type="radio" value="5"><label
                    for="rate1">★</label>
                <input id="rate2" name="reviewStar" type="radio" value="4"><label
                    for="rate2">★</label>
                <input id="rate3" name="reviewStar" type="radio" value="3"><label
                    for="rate3">★</label>
                <input id="rate4" name="reviewStar" type="radio" value="2"><label
                    for="rate4">★</label>
                <input id="rate5" name="reviewStar" type="radio" value="1"><label
                    for="rate5">★</label>
            </fieldset>

            <div style="display: inline;">
                <label for="img_upload">
                    <img src="/img/photo_add.png" style="width:100px; height:100px; cursor: pointer;">
                </label>
                <br>
                <input type="file" name="img_upload" id="img_upload" style="display: none" multiple accept="image/*" onchange="previewImage(this,'View_area')">
                <input type="hidden">
                <span id='View_area' style='position:relative; color: black; border: 0px solid black;'></span>
            </div>

            <div class="form-group" style="margin: 10px;">
                <label for="nameReview" style="width: 45px;">이름</label>
                <input class="review" id="nameReview" name="name" readonly style="width: 13%; text-align: center;"
                       th:value="${#authentication.principal.nickName != null ? #authentication.principal.nickName : ''}"
                       type="text">
                <label for="emailReview" style="width: 65px; text-align: center;">이메일</label>
                <input class="review" id="emailReview" name="createdByEmail" readonly style="width: 72%;"
                       th:value="${#authentication.principal.email != null ? #authentication.principal.email : ''}"
                       type="email">
            </div>
            <div class="form-group" style="margin: 10px;">
                <label for="questionReview" style="width: 45px;">리뷰</label>
                <textarea class="review" id="questionReview" name="reviewContent" style="width: 94%;"
                          th:placeholder="${#httpServletRequest.userPrincipal == null ? '로그인이 필요합니다' : ''}"
                          th:readonly="${#httpServletRequest.userPrincipal == null}"></textarea>
            </div>
            <div class="text-center" style="margin: 5px;" th:if="${#httpServletRequest.userPrincipal != null}">
                <button class="btn btn-dark" onclick="sendData()">리뷰작성</button>
            </div>
    </div>


    <div class="review" id="reviewList" style="text-align: left; padding: 10px;">
        <h4>구매 고객님이 작성해주신 리뷰</h4>
        <table style="width: 100%; border: 1px solid gray;" th:each="review : ${reviewList}">
            <input id="reviewId" th:value="${review.id}" type="hidden">
            <tr>
                <span th:each="reviewImg : ${review.reviewImgDtoList}">
                    <div class="image-container">
                        <img height="200" th:if="${not #strings.isEmpty(reviewImg.imgUrl)}" th:src="${reviewImg.imgUrl}"
                             width="50">
                    </div>
                </span>
            </tr>
            <tr>
                <td>
                    <span style="display: inline-block; font-size: 22px; padding-left: 15px;"
                          th:text="${review.nickName} "></span>
                    <span th:text="${#temporals.format(review.regTime, 'yy-MM-dd hh:mm')}"></span>
                </td>
            </tr>
            <tr>
                <td style="padding-left: 15px">
                    <fieldset style="display: none;" th:class="'star-update-' + ${review.id}">
                        <input class="reviewStarGen" id="rate1Update" type="radio" value="5"><label
                            for="rate1Update">★</label>
                        <input class="reviewStarGen" id="rate2Update" type="radio" value="4"><label
                            for="rate2Update">★</label>
                        <input class="reviewStarGen" id="rate3Update" type="radio" value="3"><label
                            for="rate3Update">★</label>
                        <input class="reviewStarGen" id="rate4Update" type="radio" value="2"><label
                            for="rate4Update">★</label>
                        <input class="reviewStarGen" id="rate5Update" type="radio" value="1"><label
                            for="rate5Update">★</label>
                    </fieldset>
                    <img alt="5 stars" height="18"
                         src="/img/reviewFive.png" th:class="'star-editMode-' + ${review.id}"
                         th:if="${review.star == '5'}" width="100">
                    <img alt="4 stars" height="18"
                         src="/img/reviewFour.png" th:class="'star-editMode-' + ${review.id}"
                         th:if="${review.star == '4'}" width="100">
                    <img alt="3 stars" height="18"
                         src="/img/reviewThree.png" th:class="'star-editMode-' + ${review.id}"
                         th:if="${review.star == '3'}" width="100">
                    <img alt="2 stars" height="18"
                         src="/img/reviewTwo.png" th:class="'star-editMode-' + ${review.id}"
                         th:if="${review.star == '2'}" width="100">
                    <img alt="1 stars" height="18"
                         src="/img/reviewOne.png" th:class="'star-editMode-' + ${review.id}"
                         th:if="${review.star == '1'}" width="100">
                    <img alt="0 stars" height="18"
                         src="/img/reviewZero.png" th:class="'star-editMode-' + ${review.id}"
                         th:if="${review.star == '0'}" width="100">
                    <span>([[${review.star}]]점)</span>
                </td>
                <td th:if="${#strings.toString(review.createdBy) == #strings.toString(#authentication.principal.idx)}">
                    <div class="button-wrapper">
                        <button th:attr="onclick='editModeReview(\'' + ${review.id} + '\')'" th:class="'button-editMode-' + ${review.id} + ' btn btn-dark'"
                                type="button">
                            수정
                        </button>
                        <button style="display: none;" th:attr="onclick='updateReview(\'' + ${review.id} + '\')'"
                                th:class="'button-update-' + ${review.id} + ' btn btn-dark'"
                                type="button">수정
                        </button>
                    </div>
                    <div class="button-wrapper">
                        <button th:attr="onclick='deleteReview(\'' + ${review.id} + '\')'" th:class="'button-delete-' + ${review.id} + ' btn btn-dark'"
                                type="button">삭제
                        </button>
                        <button style="display: none;" th:attr="onclick='editModeReviewCancel(\'' + ${review.id} + '\')'"
                                th:class="'button-noneEditMode-' + ${review.id} + ' btn btn-dark'"
                                type="button">취소
                        </button>
                    </div>
                    <div class="button-wrapper">
                        <button class="btn btn-dark" type="button">신고하기
                        </button>
                    </div>
                </td>
            </tr>
            <tr>
                <td colspan="5" style="text-align: left; border: 1px gray solid; border-radius: 5px;">
                    <span style="padding: 10px;" th:class="'content-span-' + ${review.id}"
                          th:text="${review.content}"></span>
                    <textarea id="contentReview"
                              name="contentReview"
                              style="width: 100%; display: none; overflow-y: hidden;" th:class="'content-input-' + ${review.id}"
                              th:text="${review.content}"></textarea>
                </td>
            </tr>
        </table>
    </div>
    <script src="https://js.tosspayments.com/v1"></script>
    <script>
        var tossPayments = TossPayments("test_ck_0Poxy1XQL8R6epq5X5987nO5Wmlg");
        var button = document.getElementById("payment-button");
        var orderId = new Date().getTime();

        button.addEventListener("click", function () {
            var method = "카드";
            var itemId = $("#itemId").val();
            var count = $("#count").val();
            var itemNm = $("#itemNm").text();

            var paymentData = {
                amount: calculateTotalPrice(),
                orderId: orderId,
                orderName: itemNm,
                customerName: "이토페",
                successUrl: window.location.origin + "/shop/order/payment?itemId=" + itemId + "&count=" + count,
                failUrl: window.location.origin + "/item" + itemId,
            };
            tossPayments.requestPayment(method, paymentData);
        });



        function order()
        {
            var token=$("meta[name='_csrf']").attr("content");
            var header=$("meta[name='_csrf_header']").attr("content");

            var url = "/shop/order";
            var paramData={
                itemId : $("#itemId").val(),
                count : $("#count").val()
            };

            var param = JSON.stringify(paramData);
            $.ajax({
                url : url,
                type : "POST",
                contentType : "application/json",
                data : param,
                beforeSend : function(xhr){
                    /*데이터를 전송하기 전에 헤더에 csrf 값을 설정*/
                    xhr.setRequestHeader(header, token);
                },
                dataType : "json",
                cache : false,
                success : function(result, status){
                    alert("주문완료");
                    location.href='/shop/orders/';
                },
                error : function (jqXHR,status,error){
                    if(jqXHR.status == '401'){
                        alert('정상적인 루트로 접근하세요');
                        location.href='/';
                    }else{
                        alert(jqXHR.responseText);
                    }
                }
            });
        }





    </script>


</div>

</div>


</html>